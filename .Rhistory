install.packages("kableExtra")
?linebreak
install.packages('makecell')
?kable
install.packges('kable')
install.packages('kable')
?mutate_all
library('kableExtra')
?mutate_all
install.packages(dplyr)
install.packages('dplyr')
library('dplyr')
knitr::opts_chunk$set(echo = TRUE)
library("makecell")
install.packages("makecell")
library('dplyr')
install.packages('survey')
library("survey", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# load packages
library('dplyr')
# Load Data
cc_hs_final = read.csv('/Users/mayracoronadogarcia/Documents/Practicum/Data Analysis/cc_hs_final.csv')
# Load Function
source("/Users/mayracoronadogarcia/Documents/GitHub/HKCSPracticum/Trend_Analysis_Function.R")
# Run Function
hkcs.results = hkcs.trend.analysis(district_id = 1140,
data = cc_hs_final,
hkcs.cluster = "CLASSID",
hkcs.strata = "SchoolID",
moda.weight = "Wt_School_moda",
modb.weight = "Wt_School_modb",
core.weight = "Wt_School",
trend = "No",
prefix = "QN_",
variables = NULL)
library("knitr")
library("kableExtra")
kable(hkcs.results[[1]], "latex", longtable = T, booktabs = T,
align = "c")
hkcs.results[[2]]%>%
mutate_all(linebreak) %>%
kable("latex", longtable = T, booktabs = T)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
library("knitr")
library("kableExtra")
kable(hkcs.results[[1]], "latex", longtable = T, booktabs = T,
align = "c")
hkcs.results[[2]]%>%
# mutate_all(linebreak) %>%
kable("latex", longtable = T, booktabs = T)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
hkcs.results[[2]]
hkcs.results[[2]]%>%
mutate_all(linebreak)
?mutate_all
hkcs.results[[2]]
?linebreak
mutate_all(hkcs.results[[2]])
mutate_all(hkcs.results[[2]], linebreak)
linebreak(hkcs.results[[2]])
hkcs.results[[2]]%>%
linebreak(hkcs.results[[2]]) %>%
# mutate_all(hkcs.results[[2]], linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
hkcs.results[[2]]%>%
linebreak(hkcs.results[[2]], align = "r") %>%
# mutate_all(hkcs.results[[2]], linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
# hkcs.results[[2]]%>%
linebreak(hkcs.results[[2]], align = "r") %>%
# mutate_all(hkcs.results[[2]], linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
mutate_all(hkcs.results[[2]], linebreak) %>%
sadasd
mutate_all(hkcs.results[[2]], linebreak)
test = data.frame(hkcs.results[[2]])
test %>%
mutate_all(linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
hkcs.results[[2]]
class(hkcs.results[[2]])
as.data.frame(hkcs.results[[2]])
test = as.data.frame(hkcs.results[[2]])
test %>%
mutate_all(linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F)%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = F)%>%
column_spec(1, width = "30em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))%>%
footnote(symbol = c("The estimates are based on half the sample size because the question was either on module A or module B."))
test = as.data.frame(hkcs.results[[2]])
class(test$`Behavior of Interest`)
kable
?kable
hkcs.results[[2]]
?column_spec
i = 1
j = 1
# set dataset to be used
year.data = variables_datasets[[i]][which(variables_datasets[[i]][, "Survey_Year"] == years[j]), ]
# Prepare Dataset
hkcs.data = data[which(data$district_id == district_id), ]
# Load Data
cc_hs_final = read.csv('/Users/mayracoronadogarcia/Documents/Practicum/Data Analysis/cc_hs_final.csv')
# Load Function
source("/Users/mayracoronadogarcia/Documents/GitHub/HKCSPracticum/Trend_Analysis_Function.R")
district_id = 1140
data = cc_hs_final
hkcs.cluster = "CLASSID"
hkcs.strata = "SchoolID"
moda.weight = "Wt_School_moda"
modb.weight = "Wt_School_modb"
core.weight = "Wt_School"
trend = "Yes"
prefix = "QN_"
variables = NULL
# Prepare Dataset
hkcs.data = data[which(data$district_id == district_id), ]
hkcs.data$time.v1 = (hkcs.data$Survey_Year - 2013)/2
# find unique years and order them in ascending order
years_list = unique(hkcs.data$Survey_Year)
years = years_list[order(years_list)]
survey_years = NULL
for(i in 1:length(years)){
survey_years[i] = paste0("Survey_", years[i] %% 100)
}
# locate all the instances where there are QN variables
if(!is.null(prefix) & is.null(variables)){
variables_of_interest.loc = grep(
paste0("^", prefix), colnames(hkcs.data))
variables_of_interest = colnames(cc_hs_final)[variables_of_interest.loc]
} else if(!is.null(variables) & is.null(prefix)){
variables_of_interest = variables
}
# create dataset for each variable so that the common weight is there
variables_datasets = list()
for(i in 1:length(variables_of_interest)){
# creates dataset with survey information and variable of interest
variables_df = hkcs.data[, c(variables_of_interest[i], "Survey_Year", "time.v1", hkcs.cluster, hkcs.strata, moda.weight,
modb.weight, core.weight)]
# stores the wiehgt information for variable of interest
weight_info = variable_info[which(variable_info$QN_Variable == variables_of_interest[i]),]
#creates common_weight variable
variables_df$common_weight = NA
for(j in 1:length(years)){
loc = which(variables_df$Survey_Year == years[j])
if(weight_info[survey_years[j]] == "AB"){
variables_df$common_weight[loc] = variables_df[loc, core.weight]
} else if(weight_info[survey_years[j]] == "A"){
variables_df$common_weight[loc] = variables_df[loc, moda.weight]
} else if(weight_info[survey_years[j]] == "B"){
variables_df$common_weight[loc] = variables_df[loc, modb.weight]
}
}
# saves dataset in a list
variables_datasets[[i]] = variables_df[which(is.na(variables_df[,variables_of_interest[i]]) == FALSE),
c(variables_of_interest[i], "Survey_Year", "time.v1",
hkcs.cluster, hkcs.strata, "common_weight")]
}
# create formula for variable of interest
freq.formula = as.formula(paste0("~", variables_of_interest[i]))
# stores the wiehgt information for variable of interest
weight_info = variable_info[which(variable_info$QN_Variable == variables_of_interest[i]),]
variable_description = as.character(weight_info$variable_description)
# proportions per year
combined.results = NULL
# set dataset to be used
year.data = variables_datasets[[i]][which(variables_datasets[[i]][, "Survey_Year"] == years[j]), ]
nrow(year.data)
nrow(year.data) <= 30
# create study design for data during jth year of ith variable
hkcs.des.year = svydesign(id = as.formula(paste0("~", hkcs.cluster)),
weight = ~common_weight,
strata = as.formula(paste0("~", hkcs.strata)),
data = year.data,
nest = TRUE)
# calculate the proportion estimates and CI for jth year of ith variable
ci = svyciprop(freq.formula, hkcs.des.year, method = "logit")
coef = format(as.vector(ci)*100, digits = 1, nsmall = 1, trim = TRUE) # coefficient
ci.coef = format(attr(ci, "ci")*100, digits = 1, nsmall = 1, trim = TRUE) # CI
# reformat the structure of the output so that everything is lined up
coef.char = ifelse(length(strsplit(coef, "")[[1]]) == 4, coef, paste0(" ", coef))
ci.low.char = ifelse(length(strsplit(ci.coef[1], "")[[1]]) == 4,
as.character(ci.coef[1]),
paste0(" ", ci.coef[1]))
ci.hi.char = ifelse(length(strsplit(ci.coef[2], "")[[1]]) == 4,
as.character(ci.coef[2]),
paste0(" ", ci.coef[2]))
# determine if ith variable during jth year needs an asterisk
asterisk = ifelse(weight_info[survey_years[j]] != "AB",
"*", "")
coef
ci
variable_of_interest
variables_of_interest
variables_of_interest[i]
year.data[, variables_of_interest[i]]
sum(year.data[, variables_of_interest[i]])
nrow(year.data) < 30
sum(year.data[, variables_of_interest[i]])
nrow(year.data)
paste0(coef.char, asterisk, "\n(",
ci.low.char,", ",
ci.hi.char,")")
# combine estimate and CI to be one string
prop.results = paste0("    ", coef.char, asterisk, "\n(",
ci.low.char," - ",
ci.hi.char,")")
prop.results
?footnote
?xtable
if (!is.installed("xtable")){install.packages("xtable")}
# Load Packages -----------------------------------------------------------
# function that checks to make sure packages are installed
is.installed <- function(mypkg){
is.element(mypkg, installed.packages()[,1])
}
if (!is.installed("xtable")){install.packages("xtable")}
library("xtable")
?table
?xtable
?xtable
?xtable
?mutate_all
?linebreak
# Load Data
cc_hs_final = read.csv('/Users/mayracoronadogarcia/Documents/Practicum/Data Analysis/cc_hs_final.csv')
# Load Function
source("/Users/mayracoronadogarcia/Documents/GitHub/HKCSPracticum/Trend_Analysis_Function.R")
# Run Function
district_name = "Test School"
hkcs.results = hkcs.trend.analysis(district_id = 1140,
data = cc_hs_final,
hkcs.cluster = "CLASSID",
hkcs.strata = "SchoolID",
moda.weight = "Wt_School_moda",
modb.weight = "Wt_School_modb",
core.weight = "Wt_School",
trend = "Yes",
prefix = "QN_",
variables = NULL)
samplesize = xtable(hkcs.results[[1]],
caption = "
*: The estimates are based on half the sample size because the question was either on module A or module B. \n
.: Data are suppressed to ensure confidentiality when the number number of students responding is fewer than 30 and/or the number of students responding Yes is fewer than 3, 0 or 100 percent, as indicated by all the periods. \n
All percentages are rounded to the nearest tenth.", atext.environments = "center", label = NULL)
percentages = as.data.frame(hkcs.results[[2]])
percentages$`Behavior of Interest` <- as.character(
percentages$`Behavior of Interest`) # factor converted to character
if(sum(colnames(percentages) == "Trend") >0){
percentages$Trend = as.character(percentages$Trend)
} # factor converted to character
dim(percentages)
dim(percentages)[2]
percentages = as.data.frame(hkcs.results[[2]])
percentages$`Behavior of Interest` <- as.character(
percentages$`Behavior of Interest`) # factor converted to character
dim(percentages)[2]
paste0("\\hline\n\\endhead\n",
"\\hline\n",
"\\multicolumn{", dim(percentages)[2]+1, "}{1}",
"\\footnotesize Continued on next page}\n",
"\\endfoot\n",
"\\endlastfoot\n")
paste0("\\hline\n\\endhead\n",
"\\hline\n",
"\\multicolumn{", dim(percentages)[2], "}{1}",
"\\footnotesize Continued on next page}\n",
"\\endfoot\n",
"\\endlastfoot\n")
percentages
mutate_all(percentages, linebreak)
xtable(mutate_all(percentages, linebreak))
add.to.row = <- list(pos= list(0), command = NULL)
add.to.row <- list(pos = list(0), command = NULL)
str(add.to.row)
str(add.to.row$pos)
?align
rows <- list(pos = list(0), command = NULL)
command <- paste0(
"\\hline\n\\endhead\n",
"\\hline\n",
"\\multicolumn{", dim(percentages)[2] + 1, "}{1}",
"{\\fotnotesize Continued on next page}\n",
"\\endfoot\n",
"\\endlastfoot\n"
)
rows$command <- command
# results data frame to be a presentable table
percentages.table = xtable(percentages)
percentages.table
percentages.table
print(percentages.table,
add.to.row = rows,
tabular.environment = "longtable"
)
print(percentages.table,
add.to.row = rows,
tabular.environment = "longtable"
floating = FALSE)
print(percentages.table,
add.to.row = rows,
tabular.environment = "longtable",
floating = FALSE)
print(percentages.table,
add.to.row = rows,
tabular.environment = "longtable",
floating = FALSE)
?kable
# results data frame to be a presentable table
percentages %>%
mutate_all(linebreak) %>%
kable("latex", longtable = T, booktabs = T, escape = F,
align = c("l",rep("r", ncol(percentages)-1)))%>%
kable_styling(latex_options = c("striped", "HOLD_position",
"repeat_header"), full_width = T)%>%
row_spec(0, align = "c") %>%
column_spec(1, width = "35em")%>%
add_header_above(c(" " = 1, "Percentage (%)" = 3))
paste0("\\hline\n\\endhead\n",
"\\hline\n",
"\\multicolumn{", dim(percentages)[2] , "}{l}",
"{\\footnotesize Continued on next page}\n",
"\\endfoot\n",
"\\endlastfoot\n")
?kable
?caption
?kable
print(percentages.table,
hline.after=c(-1),
add.to.row = add.to.row,
tabular.environment = "longtable",
floating = FALSE,
include.rownames = FALSE)
# Load Data
cc_hs_final = read.csv('/Users/mayracoronadogarcia/Documents/Practicum/Data Analysis/cc_hs_final.csv')
# Load Function
source("/Users/mayracoronadogarcia/Documents/GitHub/HKCSPracticum/Trend_Analysis_Function.R")
# Run Function
district_name = "Test School"
hkcs.results = hkcs.trend.analysis(district_id = 1140,
data = cc_hs_final,
hkcs.cluster = "CLASSID",
hkcs.strata = "SchoolID",
moda.weight = "Wt_School_moda",
modb.weight = "Wt_School_modb",
core.weight = "Wt_School",
trend = "Yes",
prefix = "QN_",
variables = NULL)
samplesize = xtable(hkcs.results[[1]],
latext.environments = "center")
print(samplesize, include.rownames = FALSE)
2012 + i &
for(i in 1:a){
2012 + i &  1 + b\\
}
install.packages('hmisc')
install.packages('Hmisc')
require('Hmisc')
install.packages('data.table')
require('Hmisc')
require('data.table')
install.packages('data.table')
require('data.table')
?latex
require('Hmisc')
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
?latex
install.packages('data.table')
install.packages('data.table')
install.packages("data.table", type="source")
